// @flow
import type {
    AddTemplate,
    CancelLoadView,
    Categories,
    ColumnConfigs,
    DeleteTemplate,
    DataSource,
    LoadedContext,
    LoadView,
    SelectTemplate,
    UnloadingContext,
    UpdateList,
    UpdateTemplate,
    WorkingListTemplates,
    WorkingListTemplate,
    WorkingListsOutputProps,
} from '../workingLists.types';
import type {
    ChangePage,
    ChangeRowsPerPage,
    ClearFilter,
    CustomRowMenuContents,
    FiltersData,
    SelectRestMenuItem,
    SelectRow,
    SetColumnOrder,
    Sort,
    StickyFilters,
    UpdateFilter,
} from '../../../../ListView';

type ExtractedProps = $ReadOnly<{|
    categories?: Categories,
    columns: ColumnConfigs,
    currentPage?: number,
    currentTemplate?: WorkingListTemplate,
    currentViewHasTemplateChanges?: boolean,
    customRowMenuContents?: CustomRowMenuContents,
    dataSource?: DataSource,
    filters?: FiltersData,
    lastIdDeleted?: string,
    lastTransaction: number,
    loadedContext?: LoadedContext,
    loading: boolean,
    loadViewError?: string,
    onAddTemplate: AddTemplate,
    onCancelLoadView?: CancelLoadView,
    onCancelUpdateList?: Function,
    onChangePage: ChangePage,
    onChangeRowsPerPage: ChangeRowsPerPage,
    onCheckSkipReload: Function,
    onCleanSkipInitAddingTemplate: Function,
    onClearFilter: ClearFilter,
    onDeleteTemplate: DeleteTemplate,
    onLoadView: LoadView,
    onUpdateFilter: UpdateFilter,
    onSelectListRow: SelectRow,
    onSelectRestMenuItem: SelectRestMenuItem,
    onSelectTemplate: SelectTemplate,
    onSetListColumnOrder: SetColumnOrder,
    onSortList: Sort,
    onUnloadingContext?: UnloadingContext,
    onUpdateList: UpdateList,
    onUpdateTemplate: UpdateTemplate,
    orgUnitId: string,
    recordsOrder?: Array<string>,
    rowsCount?: number,
    rowsPerPage?: number,
    sortByDirection?: string,
    sortById?: string,
    stickyFilters?: StickyFilters,
    updating: boolean,
    updatingWithDialog: boolean,
    templates?: WorkingListTemplates,
|}>;

type RestProps = $Rest<WorkingListsOutputProps, ExtractedProps>;

export type Props = $ReadOnly<{|
    ...WorkingListsOutputProps,
|}>;

export type ContextBuilderOutputProps = $ReadOnly<{|
    ...RestProps,
    dirtyTemplates: boolean,
    loadedContext: LoadedContext,
    templates?: WorkingListTemplates,
|}>;
